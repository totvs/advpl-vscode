<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>$schema</key>
    <string>https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json</string>
    <key>name</key>
    <string>ADVPL</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#diretivas-compilador</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#tipos</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#comentario</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#estruturas-de-controle</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#comandos</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#declaracoes</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#expressao</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#annotation-def</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#tlpp</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#annotation-use</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>tlpp</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?i)^\s*(namespace)\s+((?:\w+(\.)?)*)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.namespace.tlpp</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.namespace.tlpp</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?i)^\s*(using namespace)\s+((?:\w+(\.)?)*)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.using.tlpp</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.namespace.tlpp</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>annotation-use</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>storage.type.annotation.java.tlpp</string>
            <key>match</key>
            <string>(?i)@[_a-zA-Z][_a-zA-Z0-9]+</string>
          </dict>
        </array>
      </dict>
      <key>annotation-def</key>
      <dict>
        <key>begin</key>
        <string>(?i)^\s*(@annotation)\s+(\w+)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.class.advpl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.class.advpl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(@end)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.class.advpl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comentario</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#declaracao-metodo</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#annotation-property-def</string>
          </dict>
        </array>
      </dict>
      <key>annotation-property-def</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?i)(\w+)(?:\s+(as)\s+(?:(numeric|char|character|logical)))?\s+(?:(default))?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.object.property.advpl</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.control.as.advpl</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>storage.type.advpl</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>keyword.control.optional.advpl</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>modifier-visibility</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.control.as.advpl</string>
            <key>match</key>
            <string>(?i)(static)?\s+</string>
          </dict>
        </array>
      </dict>
      <key>modifier</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.control.as.advpl</string>
            <key>match</key>
            <string>(?i)(static)?\s+(public|private|protected)?</string>
          </dict>
        </array>
      </dict>
      <key>diretivas-compilador</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.control.directives.advpl</string>
            <key>match</key>
            <string>(?i)#\b(define|endif|ifn?def|include|x?command|x?translate)\b</string>
          </dict>
        </array>
      </dict>
      <key>comandos</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.operator.crlf.advpl</string>
            <key>match</key>
            <string>(?i)\b(CRLF)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.beginsql.advpl</string>
            <key>begin</key>
            <string>(?i)\b(beginsql)\s+(alias)(\s+\w+)?</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.beginsql.advpl</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.control.alias.advpl</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.parameter.advpl</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?i)endsql</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.control.endsql.advpl</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comentario</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#tipo-caracter</string>
              </dict>
              <dict>
                <key>name</key>
                <string>storage.modifier.advpl</string>
                <key>match</key>
                <string>%.*?%</string>
              </dict>
              <dict>
                <key>name</key>
                <string>variable.parameter.sqlquery.advpl</string>
                <key>match</key>
                <string>\b(\w+)\b</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.begincontent.advpl</string>
            <key>begin</key>
            <string>(?i)\b(begincontent)\s+(var)(\s+\w+)?</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.begincontent.advpl</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.control.var.advpl</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.advpl</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?i)endcontent</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.control.endcontent.advpl</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comentario</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#tipo-caracter</string>
              </dict>
              <dict>
                <key>name</key>
                <string>storage.modifier.advpl</string>
                <key>match</key>
                <string>%.*?%</string>
              </dict>
              <dict>
                <key>name</key>
                <string>variable.parameter.sqlquery.advpl</string>
                <key>match</key>
                <string>\b(\w+)\b</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>tipos</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#tipo-logico</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tipo-numero</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tipo-caracter</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tipo-bloco</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tipo-array</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tipo-objeto</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tipo-campo</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#declaracao-wsstruct</string>
          </dict>
        </array>
      </dict>
      <key>declaracoes</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#declaracao-funcao</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#declaracao-classe</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#declaracao-metodo</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#declaracao-wsmethod</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#declaracao-wsservice-wsclient-wsrestful</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#declaracao-variavel</string>
          </dict>
        </array>
      </dict>
      <key>tipo-logico</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.true.advpl</string>
            <key>match</key>
            <string>(?i)\.t\.</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.false.advpl</string>
            <key>match</key>
            <string>(?i)\.f\.</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.null.advpl</string>
            <key>match</key>
            <string>(?i)\bnil\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.operator.and.advpl</string>
            <key>match</key>
            <string>(?i)\.and\.</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.operator.or.advpl</string>
            <key>match</key>
            <string>(?i)\.or\.</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.operator.not.advpl</string>
            <key>match</key>
            <string>(?i)\.not\.</string>
          </dict>
        </array>
      </dict>
      <key>tipo-numero</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?x)
(?&lt;!\$)(?:
  (?:\b[0-9]+(\.)[0-9]+[eE][+-]?[0-9]+\b)| # 1.1E+3
  (?:\b[0-9]+(\.)[eE][+-]?[0-9]+\b)|       # 1.E+3
  (?:\B(\.)[0-9]+[eE][+-]?[0-9]+\b)|       # .1E+3
  (?:\b[0-9]+[eE][+-]?[0-9]+\b)|            # 1E+3
  (?:\b[0-9]+(\.)[0-9]+\b)|                # 1.1
  (?:\b[0-9]+(\.)\B)|                      # 1.
  (?:\B(\.)[0-9]+\b)|                      # .1
  (?:\b[0-9]+\b(?!\.))                     # 1
)(?!\$)</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>constant.numeric.decimal.advpl</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.advpl</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.advpl</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.advpl</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.advpl</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.advpl</string>
              </dict>
              <key>6</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.advpl</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>tipo-caracter</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>string.quoted.double.advpl</string>
            <key>match</key>
            <string>("[^"]*"?)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>string.quoted.double.advpl</string>
            <key>match</key>
            <string>('[^']*'?)</string>
          </dict>
        </array>
      </dict>
      <key>tipo-objeto</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?i)\b(self|_super)</string>
            <key>name</key>
            <string>keyword.class.advpl</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#chamada-metodo</string>
          </dict>
          <dict>
            <key>match</key>
            <string>((?:::|:)\b\w+)\b(?!:\w)</string>
            <key>name</key>
            <string>variable.advpl</string>
          </dict>
          <dict>
            <key>match</key>
            <string>((?:::|:)\b\w+)\b</string>
            <key>name</key>
            <string>variable.object.advpl</string>
            <key>comment</key>
            <string>variable.advpl</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(\w+)\(\)\:</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.object.advpl</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>tipo-array</key>
      <dict>
        <key>name</key>
        <string>meta.array.literal.advpl</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.decl.advpl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.decl.advpl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comentario</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressao</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#virgula</string>
          </dict>
        </array>
      </dict>
      <key>tipo-bloco</key>
      <dict>
        <key>name</key>
        <string>meta.codeblock.literal.advpl</string>
        <key>begin</key>
        <string>\{\s*(?=(\|.*\|))</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.decl.advpl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\s*\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.decl.advpl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comentario</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressao</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#virgula</string>
          </dict>
        </array>
      </dict>
      <key>tipo-campo</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>####</string>
            <key>name</key>
            <string>meta.field.advpl</string>
            <key>comment</key>
            <string>\b(?:(?:\(?([A-Z0-9]{2,3})\)?(-&gt;))?([A-Z0-9]{2,3})_([A-Z0-9_]{1,7}))|(?:(\(?\w+\)?)(-&gt;)(\w+))\b</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>meta.alias.name.advpl</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.alias.advpl</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>meta.table.name.advpl</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>meta.field.name.advpl</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>meta.alias.name.advpl</string>
              </dict>
              <key>6</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.alias.advpl</string>
              </dict>
              <key>7</key>
              <dict>
                <key>name</key>
                <string>meta.field.name.advpl</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>comentario</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.block.advpl</string>
            <key>begin</key>
            <string>/\*</string>
            <key>end</key>
            <string>\*/</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.advpl</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>begin</key>
            <string>(^[ \t]+)?(?=//)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.whitespace.comment.leading.advpl</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=$)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>comment.line.double-slash.advpl</string>
                <key>begin</key>
                <string>//</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.advpl</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=$)</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>estruturas-de-controle</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.control.ws.flow.advpl</string>
            <key>match</key>
            <string>(?i)\b(begin|end)\b\s+\b(wsmethod)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.control.sequence.flow.advpl</string>
            <key>match</key>
            <string>(?i)\b(begin|end)\b\s+\b(sequence)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.control.transaction.flow.advpl</string>
            <key>match</key>
            <string>(?i)\b(begin|end)\b\s+\b(transaction)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.control.flow.advpl</string>
            <key>match</key>
            <string>(?i)\b(break|return)\b(?!\$)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.control.loop.advpl</string>
            <key>match</key>
            <string>(?i)\b(for|next|to|exit|loop|step|continue|goto|while|end|enddo)\b(?!\$)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.control.switch.advpl</string>
            <key>match</key>
            <string>(?i)\b(do|case|otherwise|endcase)\b(?!\$)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.control.conditional.advpl</string>
            <key>match</key>
            <string>(?i)\b(else(if)?|i?if|endif)\b(?!\$)</string>
          </dict>
        </array>
      </dict>
      <key>operadores</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.compound.advpl</string>
            <key>match</key>
            <string>\*=|(?&lt;!\()/=|%=|\+=|\-=</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.comparison.advpl</string>
            <key>match</key>
            <string>==|!=</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.relational.advpl</string>
            <key>match</key>
            <string>&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.logical.advpl</string>
            <key>match</key>
            <string>\!|\.and\.|\.or\.</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.advpl</string>
            <key>match</key>
            <string>:\=</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.decrement.advpl</string>
            <key>match</key>
            <string>--</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.increment.advpl</string>
            <key>match</key>
            <string>\+\+</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.arithmetic.advpl</string>
            <key>match</key>
            <string>%|\*|/|-|\+</string>
          </dict>
        </array>
      </dict>
      <key>declaracao-variavel</key>
      <dict>
        <key>name</key>
        <string>meta.declaration.advpl</string>
        <key>begin</key>
        <string>(?i)^\s*\b(local|static|private|public|default)\b\s+(\w+)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.advpl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=$)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comentario</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressao</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tipagem</string>
          </dict>
        </array>
      </dict>
      <key>tipagem</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?i)(?:\s+(as)\s+(array|block|codeblock|character|char|date|logical|numeric|object|variadic|variant|integer|double|decimal|json))</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>constant.other.symbol.as.advpl</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>support.type.advpl</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>data</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#modifier</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?i)\b((?:ws)?data)\s+(\w+)(?:\s+(as)\s+(array of\s+)?(?:(string|date|integer|float|boolean|array|Base64Binary|object|block|codeblock|character|char|date|logical|numeric|variadic|variant|double|decimal|json)|(\w+))\s*)?(optional)?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.modifier.advpl</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>variable.parameter.object.property.advpl</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>constant.other.symbol.as.advpl</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>support.type.arrayof.advpl</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>support.type.advpl</string>
              </dict>
              <key>6</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.class.advpl</string>
              </dict>
              <key>7</key>
              <dict>
                <key>name</key>
                <string>keyword.control.optional.advpl</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>expressao</key>
      <dict>
        <key>name</key>
        <string>meta.expression.advpl</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comentario</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tipos</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operadores</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#chamada-funcao</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressao-alias</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressao-parenteses</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#virgula</string>
          </dict>
        </array>
      </dict>
      <key>chamada-metodo</key>
      <dict>
        <key>begin</key>
        <string>((?:::|:)\w+)(?=\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.advpl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comentario</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressao-parenteses</string>
          </dict>
        </array>
      </dict>
      <key>chamada-funcao</key>
      <dict>
        <key>begin</key>
        <string>(\w+)(?=\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.advpl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comentario</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressao-parenteses</string>
          </dict>
        </array>
      </dict>
      <key>declaracao-funcao</key>
      <dict>
        <key>name</key>
        <string>meta.function.advpl</string>
        <key>begin</key>
        <string>(?i)^\s*(?:(html|main|project|pyme|static|template|user|web|webuser)\s+)?(function)\s+(\w+)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.advpl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>storage.type.function.advpl</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.advpl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\)|\s)(?:(?i)\s+(as)\s+(array|block|codeblock|character|char|date|logical|numeric|object|variadic|variant|integer|double|decimal|json))?</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.other.symbol.as.advpl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>support.type.advpl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressao</string>
          </dict>
        </array>
      </dict>
      <key>declaracao-classe</key>
      <dict>
        <key>name</key>
        <string>meta.class.advpl</string>
        <key>begin</key>
        <string>(?i)^\s*(class)\s+(\w+)(?:(?:\s+(inherit(?:\sfrom)|from|of)\s+(\w+)))?</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.class.advpl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.class.advpl</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>storage.type.class.advpl</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.class.advpl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(end\s*class)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.class.advpl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comentario</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#declaracao-metodo</string>
          </dict>
          <dict>
            <key>name</key>
            <string>storage.type.constructor.advpl</string>
            <key>match</key>
            <string>(?i)\b(constructor)\b</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#data</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#annotation-use</string>
          </dict>
        </array>
      </dict>
      <key>declaracao-metodo</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#modifier</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#modifier-visibility</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function-parameters</string>
          </dict>
        </array>
        <key>begin</key>
        <string>(?i)\s*(method)\s+(\w+)\s*(?=\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.method.advpl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.advpl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?&lt;=\))(?:\s+(as)\s+(array|block|codeblock|character|char|date|logical|numeric|object|variadic|variant|integer|double|decimal|json))?(?:\s+(class)\s+(\w+))?</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.other.symbol.as.advpl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>support.type.advpl</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>storage.type.class.advpl</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.class.advpl</string>
          </dict>
        </dict>
      </dict>
      <key>function-parameters</key>
      <dict>
        <key>name</key>
        <string>meta.parameters.advpl</string>
        <key>begin</key>
        <string>\s*\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.parameters.begin.advpl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.parameters.end.advpl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comentario</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#nome-parametro</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tipo-dado</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#virgula</string>
          </dict>
        </array>
      </dict>
      <key>declaracao-wsstruct</key>
      <dict>
        <key>name</key>
        <string>meta.struct.literal.advpl</string>
        <key>begin</key>
        <string>(?i)^\s*(wsstruct)\s+(\w+)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.struct.advpl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.object.advpl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)^\s*(endwsstruct)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.struct.advpl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comentario</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#data</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?i)(wsmethod)\s+(\w+)(\s+description)?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.method.advpl</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.advpl</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>keyword.control.struct.advpl</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>declaracao-wsservice-wsclient-wsrestful</key>
      <dict>
        <key>name</key>
        <string>meta.ws.literal.advpl</string>
        <key>begin</key>
        <string>(?i)^\s*(?&lt;!wsmethod)(wsservice|wsclient|wsrestful)\s+(\w+)(\s+description)?</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.ws.advpl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.ws.advpl</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>keyword.control.ws.advpl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)^\s*(endwsservice|endwsclient|endwsrestful|end\s*wsrestful)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.ws.advpl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comentario</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tipo-caracter</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#data</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?i)(wsmethod)\s+(\w+)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.method.advpl</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.advpl</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?i)(description|wssyntax|path)</string>
            <key>name</key>
            <string>keyword.control.ws.advpl</string>
          </dict>
        </array>
      </dict>
      <key>declaracao-wsmethod</key>
      <dict>
        <key>begin</key>
        <string>(?i)^\s*(wsmethod)\s+(\w+)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.method.advpl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.advpl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(wsservice|wsclient|wsrestful|wsrest)\s+(\w+)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.ws.advpl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.class.advpl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?i)(wssend|wsreceive)</string>
            <key>name</key>
            <string>storage.type.parameter.advpl</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\w+)</string>
            <key>name</key>
            <string>variable.parameter.advpl</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#virgula</string>
          </dict>
        </array>
      </dict>
      <key>expressao-alias</key>
      <dict>
        <key>begin</key>
        <string>####</string>
        <key>coment</key>
        <string> desabilitado (\(?)(\w+)(\)?)(-&gt;)(\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.advpl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>meta.alias.name.advpl</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.advpl</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.alias.advpl</string>
          </dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.advpl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.advpl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expressao</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#virgula</string>
          </dict>
        </array>
      </dict>
      <key>expressao-parenteses</key>
      <dict>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.advpl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.advpl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expressao</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#virgula</string>
          </dict>
        </array>
      </dict>
      <key>nome-parametro</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>variable.parameter.advpl</string>
            <key>match</key>
            <string>(\w+)</string>
          </dict>
        </array>
      </dict>
      <key>tipo-dado</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?i)\s+(as)\s+(array|block|codeblock|character|char|date|logical|numeric|object|variadic|variant|integer|double|decimal|json)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>constant.other.symbol.as.advpl</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>support.type.advpl</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>virgula</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>punctuation.separator.comma.advpl</string>
            <key>match</key>
            <string>,</string>
          </dict>
        </array>
      </dict>
    </dict>
    <key>scopeName</key>
    <string>source.advpl</string>
  </dict>
</plist>